/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ipis.pkg1.pkg0;

import Bean.Patient;
import DAO.DAOImpl;
import DAO.DAOIntf;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author RAFFY
 */

public class AddPatientScreen extends javax.swing.JFrame {

    int chartno = 1;
    
    /**
     * Creates new form AddPatientScreen
     */
    public AddPatientScreen() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Patient");
        setName("AddPatientScreen"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Last name");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("First name");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("MI");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Sex");

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "M", "F" }));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Date of birth");

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "YYYY", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940" }));

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Chart No.", "Last name", "First name", "MI", "Sex", "Date of birth", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setText("Add Patient");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("City");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(245, 245, 245))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String fname = jTextField4.getText().trim();
        String lname = jTextField1.getText().trim();
        String mi = jTextField3.getText();
        String sex = jComboBox1.getSelectedItem().toString();
        Calendar birth = Calendar.getInstance();
        String birthday;
        String tempmonth = jComboBox2.getSelectedItem().toString();
        String tempday = jComboBox3.getSelectedItem().toString();
        String tempyear = jComboBox4.getSelectedItem().toString();
        String tip = " Valid inputs are letters and spaces for the names. \n Middle Initial should contain only 1 letter. \n Birthday should contain only numbers.";
        String city = jTextField2.getText().trim();
        
        if(!fname.isEmpty() && !lname.isEmpty() && !mi.isEmpty() && !sex.isEmpty() && !city.trim().isEmpty()){
         
            if(fname.matches("[a-zA-Z.Ññé ]+") && lname.matches("[a-zA-Z.Ññé ]+") && mi.matches("[a-zA-Z]") && tempmonth.matches("[0-9]+") && tempday.matches("[0-9]+") && tempyear.matches("[0-9]+") && city.matches("[a-zA-Z.Ññé ]+")){
                
                DAOIntf di = new DAOImpl();
                ArrayList<Patient> allPatients = di.getAllPatients();
                int month = Integer.parseInt(jComboBox2.getSelectedItem().toString());
                int day = Integer.parseInt(jComboBox3.getSelectedItem().toString());
                int year = Integer.parseInt(jComboBox4.getSelectedItem().toString());
                birth.set(Calendar.YEAR, year);
                birth.set(Calendar.MONTH, month);
                birth.set(Calendar.DAY_OF_MONTH, day);
                birthday = birth.get(Calendar.MONTH) + "/" + birth.get(Calendar.DAY_OF_MONTH) + "/" + birth.get(Calendar.YEAR);
        
                Patient p = new Patient();
                p.setLname(lname);
                p.setFname(fname);
                p.setMi(mi);
                p.setSex(sex);
                p.setBirthday(birthday);
                p.setCity(city);
                
                int j = 0;
                for(int i = 0; i < allPatients.size(); i++) {
                    j = 0;
                    if(p.getLname().equalsIgnoreCase(allPatients.get(i).getLname())){
                        j++;
                    }
                    if(p.getFname().equalsIgnoreCase(allPatients.get(i).getFname())){
                        j++;
                    }
                    if(p.getMi().equalsIgnoreCase(allPatients.get(i).getMi())){
                        j++;
                    }
                    if(p.getSex().equalsIgnoreCase(allPatients.get(i).getSex())){
                        j++;
                    }
                    if(p.getBirthday().equalsIgnoreCase(allPatients.get(i).getBirthday())){
                        j++;
                    }
                    if(p.getCity().equalsIgnoreCase(allPatients.get(i).getCity())){
                        j++;
                    }
                    if (j == 6){
                        break;
                    }
                }
                
                if(j == 6){
                    
                    int reply = JOptionPane.showConfirmDialog(null, "There is an exact same patient with these info. Are you sure you want to add this patient?", "Warning", JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION) {
                        di.addPatient(p);
                        String st = "Patient Added Successfully.";
                        JOptionPane.showMessageDialog(null, st);
                    }
                    else{
                        String st = "Patient Not Added.";
                        JOptionPane.showMessageDialog(null, st);
                    }
                }
                else{
                    di.addPatient(p);
                    String st = "Patient Added Successfully.";
                    JOptionPane.showMessageDialog(null, st);
                }
                refresh();
                
                jTextField4.setText("");
                jTextField1.setText("");
                jTextField3.setText("");
                jTextField2.setText("");
                jComboBox1.setSelectedIndex(0);
                jComboBox2.setSelectedIndex(0);
                jComboBox3.setSelectedIndex(0);
                jComboBox4.setSelectedIndex(0);
            }
            
            else{
                String warn = "Incorrect input for: \n";
                String warnf = "";
                String warnl = "";
                String warnmi = "";
                String warnm = "";
                String warnd = "";
                String warny = "";
                String warnc = "";
                
                if(!fname.matches("[a-zA-Z.Ññé ]+")){
                    warnf = " First name";
                }
                if(!lname.matches("[a-zA-Z.Ññé ]+")){
                    warnl = " Last name";
                }
                if(!mi.matches("[a-zA-Z]")){
                    warnmi = " Middle Initial";
                }
                if(!tempmonth.matches("[0-9]+")){
                    warnm = " Month";
                }
                if(!tempday.matches("[0-9]+")){
                    warnd = " Day";
                }
                if(!tempyear.matches("[0-9]+")){
                    warny = " Year";
                }
                if(!city.matches("[a-zA-Z.Ññé ]+")){
                    warnc = " City";
                }
                
                if(!warnf.equals("")){
                    warn += warnf + "\n";
                }
                if(!warn.equals("")){
                    warn += warnl + "\n";
                }
                if(!warnmi.equals("")){
                    warn += warnmi + "\n";
                }
                if(!warnm.equals("")){
                    warn += warnm + "\n";
                }
                if(!warnd.equals("")){
                    warn += warnd + "\n";
                }
                if(!warny.equals("")){
                    warn += warny + "\n";
                }
                if(!warnc.equals("")){
                    warn += warnc + "\n";
                }
                
                warn += "\nPlease be guided that:\n" + tip + "\n";
                JOptionPane.showMessageDialog(null,warn);
                
            }
            
        }
        else{
            
            String st;
            String st1 = "";
            String st2 = "";
            String st3 = "";
            String st4 = "";
            String st5 = "";
            String st6 = "";
            String st7 = "";
            String st8 = "";
            
            if(fname.isEmpty()) {
               st1 = " First name"; 
            }
            if(lname.isEmpty()) {
               st2 = " Last name"; 
            }
            if(mi.isEmpty()) {
               st3 = " Middle Initial"; 
            }
            if(sex.isEmpty()) {
               st4 = " Sex"; 
            }
            if(tempmonth.equals("MM")){
                st5 = " Month";
            }
            if(tempday.equals("DD")){
                st6 = " Day";
            }
            if(tempyear.equals("YYYY")){
                st7 = " Year";
            }
            if(city.isEmpty()){
                st8 = " City";
            }
            
                    
            st = "Incomplete! Please input the following: \n"; 
            
            if(!st1.equals("")) {
               st += st1 + "\n";
            }
            if(!st2.equals("")) {
                st += st2 + "\n";
            }
            if(!st3.equals("")) {
                st += st3 + "\n";
            }
            if(!st4.equals("")) {
                st += st4 + "\n";
            }
            if(!st5.equals("")) {
                st += st5 + "\n";
            }
            if(!st6.equals("")) {
                st += st6 + "\n";
            }
            if(!st7.equals("")) {
                st += st7 + "\n";
            }
            if(!st8.equals("")) {
                st += st8 + "\n";
            }
            
            st += "\nPlease be guided that:\n" + tip + "\n";
            JOptionPane.showMessageDialog(null,st);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void refresh() {
        DAOIntf di = new DAOImpl();
        ArrayList<Patient> allPatients = di.getAllPatients();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for(int i = 0; i < allPatients.size(); i++) {
            Patient pasyente = allPatients.get(i);
            Vector row = new Vector();
            row.add(pasyente.getId());               // not sure with this, pa updte na lang
            row.add(pasyente.getLname());
            row.add(pasyente.getFname());
            row.add(pasyente.getMi());
            row.add(pasyente.getSex());
            row.add(pasyente.getBirthday());
            row.add(pasyente.getCity());
            model.addRow(row);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        refresh();
        this.dispose();
        new MainScreen().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
